PART I:
-------

rails new election_2012

cd election_2012

rm Gemfile.lock

rm Gemfile

vi Gemfile
----------
source 'http://rubygems.org'

gem 'rails', '3.1.1'
gem 'rake', '>=0.8.7'
gem 'unicorn'
gem 'mongo'
gem 'bson_ext', '>= 1.4.0'
gem 'mongoid', '>= 2.2.0'
gem 'mongoid_slug'
gem 'jquery-rails', '>= 1.0.12'
gem 'delayed_job', '2.1.4'
gem 'delayed_job_mongoid', '1.0.4'
gem 'capistrano'
gem 'capistrano-ext'
gem 'kaminari', '~> 0.12.4'
group :assets do
   gem 'yui-compressor'
end
gem 'rspec-rails'
gem 'tinymce-rails'

# paperclip gems
gem "mongoid-paperclip", :require => "mongoid_paperclip"
gem "aws-s3",            :require => "aws/s3"

# trial carrierwave replacement for paperclip, dev dep incl 'sqlite3'
gem 'carrierwave-mongoid', :require => 'carrierwave/mongoid'
gem 'sqlite3'

gem 'curb'
gem 'feedzirra'
gem 'memcache-client'
---------------------

rails g scaffold Party name:string abbreviation:string color:string

vi app/models/party.rb
----------------------
class Party < ActiveRecord::Base
  has_many :candidates
end
---

rails g scaffold Candidate first_name:string last_name:string party_id:integer quote:text in_race:boolean in_race_status:string

vi app/models/candidate.rb
--------------------------
class Candidate
  include Mongoid::Document
  field :first_name, :type => String
  field :last_name, :type => String
  field :party_id, :type => Integer
  field :quote, :type => String
  field :in_race, :type => Boolean
  field :in_race_status, :type => String
  field :remote_image_url, :type => String
  belongs_to :party
  mount_uploader :image, CandidateImageUploader
end
---

vi app/views/candidates/_form.html.erb
--------------------------------------
<div class="field">
  <%= f.file_field :image %>
</div>
<div class="field">
  <%= f.label :remote_image_url, "or image URL" %>
  <%= f.text_field :remote_image_url %>
</div>
------

vi app/views/candidates/show.html.erb
-------------------------------------
<p>
  <%= image_tag @candidate.image_url(:thumb).to_s %>
</p>
----

rails g uploader candidate_image

vi app/uploaders/candidate_image_uploader.rb
--------------------------------------------
version :thumb do
  process :scale => [50, 50]
end
---

rails s


PART II:
--------

mkdir src

cd src

wget http://downloads.ghostscript.com/public/ghostscript-9.04.tar.gz

tar xvzf ghostscript-9.04.tar.gz

cd ghostscript-9.04

./configure

make && sudo make install

cd ..

wget http://downloads.sourceforge.net/project/gs-fonts/gs-fonts/8.11%20%28base%2035%2C%20GPL%29/ghostscript-fonts-std-8.11.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fgs-fonts%2F&ts=1322430313&use_mirror=kent

tar xvzf ghostscript-fonts-std-8.11.tar.gz

sudo mv fonts /usr/local/share/ghostscript/9.04/

wget http://www.imagemagick.org/download/binaries/ImageMagick-x86_64-apple-darwin11.2.0.tar.gz

tar xvzf ImageMagick-x86_64-apple-darwin11.2.0.tar.gz

cd ImageMagick-6.7.3

./configure --with-quantum-depth=16 --disable-dependency-tracking --with-x=yes --x-includes=/usr/X11R6/include --x-libraries=/usr/X11R6/lib/ --with-gslib --disable-openmp --with-gs-font-dir=/usr/local/share/ghostscript/9.04/fonts

make && sudo make install

cd ..

convert logo: logo.png

display logo.png (hi, mr wizard!)

rm -rf src


PART III:
---------

vi Gemfile
----------
# trial carrierwave replacement for paperclip, dev dep incl 'sqlite3'
gem 'carrierwave-mongoid', :require => 'carrierwave/mongoid'
gem 'sqlite3'
gem 'rmagick'
gem 'fog'
---------

vi app/uploaders/candidate_image_uploader.rb
--------------------------------------------
storage :fog
...
def store_dir
  "images/#{model.class.to_s.underscore}/#{model.id}"
end
...
version :thumb do
  process :resize_to_limit => [160, 90]
end
---

vi config/initializers/carrierwave.rb
-------------------------------------
S3_CONFIG = YAML.load(ERB.new(File.new("#{Rails.root}/config/s3.yml").read).result)[Rails.env]

# Fog Configuration
CarrierWave.configure do |config|
  config.root = Rails.root.join('tmp')
  config.cache_dir = 'carrierwave'

  config.fog_credentials = {
    :aws_access_key_id => S3_CONFIG['access_key_id'],
    :aws_secret_access_key => S3_CONFIG['secret_access_key'],
    :provider => 'AWS'
  }
  #config.fog_host = 'http://ruby.current.com'
  config.fog_directory = S3_CONFIG['bucket']
  config.fog_public = true
end
---

vi config/s3.yml
----------------
local:
  bucket: currenttv_local
  access_key_id: <%= ENV['AMAZON_ACCESS_KEY_ID'] %>
  secret_access_key: <%= ENV['AMAZON_SECRET_ACCESS_KEY'] %>
development:
  bucket: currenttv_dev
  access_key_id: <%= ENV['AMAZON_ACCESS_KEY_ID'] %>
  secret_access_key: <%= ENV['AMAZON_SECRET_ACCESS_KEY'] %>
test:
  bucket: currenttv_test
  access_key_id: <%= ENV['AMAZON_ACCESS_KEY_ID'] %>
  secret_access_key: <%= ENV['AMAZON_SECRET_ACCESS_KEY'] %>
staging:
  bucket: currenttv_stg
  access_key_id: <%= ENV['AMAZON_ACCESS_KEY_ID'] %>
  secret_access_key: <%= ENV['AMAZON_SECRET_ACCESS_KEY'] %>
production:
  bucket: currenttv
  access_key_id: <%= ENV['AMAZON_ACCESS_KEY_ID'] %>
  secret_access_key: <%= ENV['AMAZON_SECRET_ACCESS_KEY'] %>
-----------------------------------------------------------

vi ~/.bash_profile
------------------
export AMAZON_ACCESS_KEY_ID="xxx"
export AMAZON_SECRET_ACCESS_KEY="xxx"
-------------------------------------

source ~/.bash_profile

rails s


PART IV:
--------

vi config/routes.rb
-------------------
Election2012::Application.routes.draw do
  resources :candidates
  resources :parties

  namespace :admin do |admin|
    match '/' => 'dashboard#index'
    resources :candidates
    resources :parties
  end
end
---

rails g controller admin/candidates

rails g controller admin/parties

